{"version":3,"sources":["webpack:///webpack/bootstrap 60d6232abf784f09c7f3","webpack:///./src/main.js","webpack:///./src/js/a.js","webpack:///./src/js/b.js","webpack:///./src/es6/app.js","webpack:///./src/css/a.css","webpack:///./src/less/a.less","webpack:///./src/sass/a.scss"],"names":["name","createElement","div","document","textContent","querySelector","appendChild","func"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,OAAO,kBAAX;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAIC,MAAMC,SAASF,aAAT,CAAuB,KAAvB,CAAV;AACAC,MAAIE,WAAJ,GAAkBJ,IAAlB;AACAG,WAASE,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CJ,GAA3C;AACD;;AAEDD,gB;;;;;;;;;;;;;ACdA;;;;;;AAEA,IAAMM,OAAO,SAAPA,IAAO,GAAM;AACjB;AACD,CAFD;;kBAIeA,I;;;;;;;;;;;;kBCNAP,OAAO,wB;;;;;;;ACAtB;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjYA,yC;;;;;;ACAA,yC;;;;;;ACAA,yC","file":"js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 60d6232abf784f09c7f3","import func from './js/a.js'\r\nimport './es6/app.js'\r\nimport './css/a.css'\r\nimport './less/a.less'\r\nimport './sass/a.scss'\r\n\r\nlet name = func();\r\n\r\nfunction createElement() {\r\n  let div = document.createElement('div');\r\n  div.textContent = name;\r\n  document.querySelector('#app').appendChild(div)\r\n}\r\n\r\ncreateElement();\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import name from './b.js'\r\n\r\nconst func = () => {\r\n  return name\r\n}\r\n\r\nexport default func\n\n\n// WEBPACK FOOTER //\n// ./src/js/a.js","export default name = 'hello webpack haha OO!'\n\n\n// WEBPACK FOOTER //\n// ./src/js/b.js","/**\r\n * let和const遇{}为块级作用域\r\n */\r\n// if(true) {\r\n//   let x = 1;\r\n// }\r\n// console.log(x);\r\n\r\n/**\r\n * 引用地址为常量\r\n */\r\n// const arr = []\r\n// arr.push('apple')\r\n// console.log(arr)\r\n\r\n/**\r\n * 对象解构\r\n */\r\n// let obj = {\r\n//   name: 'guerdan',\r\n//   age: 522,\r\n//   grade: 99\r\n// }\r\n// // 简写\r\n// let {name, age, grade} = obj\r\n// // 重命名\r\n// let {name: first, age: second, grade: third} = obj\r\n// console.log(name, age, grade)\r\n// console.log(first, second, third)\r\n\r\n/**\r\n * 数组展开运算符（展开运算符可用于复制数组、对象，复制实例化的对象时，只能复制对象的属性）\r\n */\r\n// let arr1 = [1, 2, 3]\r\n// let arr2 = [4, 5, 6]\r\n// let arr3 = [...arr1, ...arr2]\r\n// console.log(arr3)\r\n\r\n/**\r\n * 对象展开运算符（和Object.assign()方法相似）\r\n */\r\n// let obj1 = {name: 'job', age: 456};\r\n// let obj2 = {grade: '88', rank: 147};\r\n// let obj3 = { ...obj1, ...obj2 };\r\n// console.log(obj3);\r\n\r\n/**\r\n * 对象的合并\r\n */\r\n// let obj1 = {name: 'job', age: 456}\r\n// let obj2 = {grade: '88', rank: 147}\r\n// let obj3 = Object.assign({}, obj1, obj2)\r\n// console.log(obj3)\r\n\r\n/**\r\n * 剩余运算符用于解构\r\n */\r\n// let arr = [1, 2, 3, 4, 5]\r\n// let [r1, r2, ...newArr] = arr\r\n// console.log(newArr)\r\n// let obj = {name: 'dange', age: '123', grade: '456', rank: '789'}\r\n// let {name, age, ...newObj} = obj\r\n// console.log(newObj)\r\n\r\n/**\r\n * 剩余运算符运用于函数（不定参数）\r\n */\r\n// function exec(...arr) {\r\n//   let res = arr.reduce(function( prev , cur , index , array){\r\n//     return prev + cur\r\n//   })\r\n//   return res\r\n// }\r\n// console.log(exec(1, 2, 3, 4, 5))\r\n\r\n/**\r\n * 模板字符串\r\n */\r\n// let food = 'apple'\r\n// console.log(`this food is ${food} and milk`)\r\n\r\n/**\r\n * 关于导入导出\r\n */\r\n// 1.当用export default people导出时，就用 import people 导入（不带大括号）\r\n// 2.一个文件里，有且只能有一个export default。但可以有多个export。\r\n// 3.当用export name 时，就用import { name }导入（记得带上大括号）\r\n// 4.当一个文件里，既有一个export default people, 又有多个export name 或者 export age时，导入就用 import people, { name, age }\r\n// 5.当一个文件里出现n多个 export 导出很多模块，导入时除了一个一个导入，也可以用import * as example\r\n\r\n/**\r\n * Promise\r\n */\r\n// then: 对应resolve的回调\r\n// catch: 1. 对应reject的回调\r\n//        2. 在执行resolve的回调（也就是then中的第一个参数）时出错，会进到catch方法中，程序执行不会中断\r\n// function runAsync(){\r\n//   return new Promise(function(resolve, reject) {\r\n//     setTimeout(function(){\r\n//       let num = 3\r\n//       if (num < 5 ) {\r\n//         resolve('可以的')\r\n//       } else {\r\n//         reject('不可以')\r\n//       }\r\n//       console.log('执行完成')\r\n//     }, 1000)\r\n//   })\r\n// }\r\n// runAsync().then((data) => {\r\n//   console.log(data)\r\n//   console.log(qwer) // 此处的qwer未定义，执行到这一行的时候会进入catch\r\n// }).catch((err) => {\r\n//   console.log(err)\r\n// })\r\n\r\n/**\r\n * 一个Promise的面试题（结果：2 3 5 4 1）\r\n */\r\n// setTimeout(function() {\r\n//   console.log(1)\r\n// }, 0);\r\n// new Promise(function executor(resolve) {\r\n//   console.log(2);\r\n//   for( var i=0 ; i<10000 ; i++ ) {\r\n//     i == 9999 && resolve();\r\n//   }\r\n//   console.log(3);\r\n// }).then(function() {\r\n//   console.log(4);\r\n// });\r\n// console.log(5);\r\n\r\n/**\r\n * 字符串的一些新的方法\r\n */\r\n// const str = 'qwer1234asd'\r\n// console.log(str.startsWith('qwer'))\r\n// console.log(str.endsWith('asd'))\r\n// console.log(str.includes('1234'))\r\n// console.log(str.repeat(3))\r\n\r\n/**\r\n * 默认的参数\r\n */\r\n// function add(x, y = 5) {\r\n//   return x + y\r\n// }\r\n// console.log(add(5))\r\n// console.log(add(4, 6))\r\n\r\n/**\r\n * 方法命名\r\n */\r\n// let data = {\r\n//   getName:  'getName',\r\n//   setName: 'setName'\r\n// }\r\n// let dog = {\r\n//   [data.getName]() {\r\n//     return this.name\r\n//   },\r\n//   [data.setName](name) {\r\n//     this.name = name\r\n//   }\r\n// }\r\n// dog.setName('nice dog')\r\n// let name = dog.getName()\r\n// console.log(name)\r\n\r\n/**\r\n * ES5数组去重方法\r\n */\r\n// function unip(arr) {\r\n//   function toObject(arr) {\r\n//     var obj = {}\r\n//     for (var i = 0, len = arr.length; i < len; i++) {\r\n//       obj[arr[i]] = true\r\n//     }\r\n//     return obj\r\n//   }\r\n//   function toArray(obj) {\r\n//     var arr = []\r\n//     for (var i in obj) {\r\n//       if (obj.hasOwnProperty(i)) {\r\n//         //  注意这里对象的key是字符串\r\n//         arr.push(parseInt(i))\r\n//       }\r\n//     }\r\n//     return arr\r\n//   }\r\n//   return toArray(toObject(arr))\r\n// }\r\n// var arr = [1, 2, 3, 4, 5, 1, 2, 3, 5]\r\n// console.log(unip(arr))\r\n\r\n/**\r\n * 使用set进行数组去重\r\n */\r\n// let arr = [1, 2, 3, 4, 5, 2, 4, 3, 1, 2]\r\n// let set = new Set(arr)\r\n// arr = [...set]\r\n// console.log(arr)\r\n\r\n/**\r\n * 函数的名字\r\n */\r\n// function res() {\r\n//   return 123\r\n// }\r\n// console.log(res.name)\r\n\r\n/**\r\n * 对比两个值是否相等\r\n */\r\n// console.log(NaN == NaN) // false\r\n// console.log(Object.is(NaN, NaN)) // true\r\n// console.log(-0 == +0) // true\r\n// console.log(Object.is(-0, +0)) // false\r\n\r\n/**\r\n * 设置对象的原型\r\n */\r\n// let cat = {\r\n//   getFood() {\r\n//     return 'fish'\r\n//   }\r\n// }\r\n// let dog = {\r\n//   getFood() {\r\n//     return 'bone'\r\n//   }\r\n// }\r\n//\r\n// // ES5的写法\r\n// // 创建一个对象，使用cat原型\r\n// let animal = Object.create(cat)\r\n// console.log(animal.getFood())\r\n// console.log(Object.getPrototypeOf(animal) === cat)\r\n// // 修改对象的原型\r\n// animal = Object.setPrototypeOf(animal, dog)\r\n// console.log(animal.getFood())\r\n// console.log(Object.getPrototypeOf(animal) === dog)\r\n//\r\n// // ES6的写法\r\n// animal = {\r\n//   __proto__: cat\r\n// }\r\n// console.log(animal.getFood())\r\n// animal.__proto__ = dog\r\n// console.log(animal.getFood())\r\n\r\n/**\r\n * 关于 class\r\n * set、get、static、extends\r\n */\r\n// class Animal {\r\n//   constructor(name, birthday) {\r\n//     this.name = name;\r\n//     this.birthday = birthday;\r\n//   }\r\n//\r\n//   toString() {\r\n//     return `name: ${this.name}, birthday: ${this.birthday}`\r\n//   }\r\n// }\r\n// class Dog extends Animal{\r\n//   constructor({name, birthday, age}) {\r\n//     super(name, birthday);\r\n//     this.age = age;\r\n//   }\r\n//\r\n//   static eat() {\r\n//     console.log('dogs will eat...')\r\n//   }\r\n//\r\n//   get prop() {\r\n//     return this.color\r\n//   }\r\n//   set prop(color) {\r\n//     this.color = color\r\n//   }\r\n//\r\n//   toString() {\r\n//     return `${super.toString()}, age: ${this.age}`\r\n//   }\r\n// }\r\n// instance\r\n// let dog = new Dog({name: 'dahuang', birthday: '2015-01-12', age: 3});\r\n// console.log(dog.toString());\r\n//\r\n// static\r\n// Dog.eat();\r\n//\r\n// get、set\r\n// dog.prop = 'red';\r\n// console.log(dog.prop);\r\n\r\n/**\r\n * 关于 set\r\n * 属性: size\r\n * 方法: add、delete、has、clear\r\n * 遍历: keys()、values()、entries()、foreach()\r\n */\r\n// let set = new Set([1, 2, 3, 4])\r\n//\r\n// // set转数组1\r\n// let array1 = [...set]\r\n// // set转数组2\r\n// let array2 = Array.from(set)\r\n//\r\n// // 遍历1\r\n// set.forEach((item) => {\r\n//   console.log(item)\r\n// })\r\n// // 遍历2\r\n// for (let item of set) {\r\n//   console.log(item)\r\n// }\r\n//\r\n// // 间接的使用数组的方法（set转数组再转set）\r\n// set = new Set([...set].map(item => item * 2)) // 2 4 6 8\r\n// // 数组新增方法，后面的回调函数类似于map函数\r\n// set = new Set(Array.from(set, item => item * 2)) // 4 8 12 16\r\n//\r\n// // 数组去重\r\n// let arr = [1, 2, 3, 4, 2, 3, 1, 5]\r\n// arr = [...new Set(arr)]\r\n// console.log(arr)\r\n//\r\n// // 两个数组的并集\r\n// let arr1 = [1, 2, 3]\r\n// let arr2 = [3, 4, 5]\r\n// set = new Set([...arr1, ...arr2])\r\n// console.log(set)\r\n//\r\n// // 两个数组的交集（利用set的has方法）\r\n// set = new Set(arr1.filter(item => new Set(arr2).has(item)))\r\n// console.log(set)\r\n//\r\n// // arr1相对于arr2的差集\r\n// set = new Set(arr1.filter(item => !new Set(arr2).has(item)))\r\n// console.log(set)\r\n\r\n/**\r\n * 关于 map\r\n * 属性: size\r\n * 方法: set、get、delete、has、clear\r\n * 遍历: keys()、values()、entries()、foreach()\r\n */\r\n// let map = new Map([\r\n//   ['name', 'haber'],\r\n//   ['title', 'author']\r\n// ])\r\n//\r\n// map转数组\r\n// let keyArr = [...map.keys()]\r\n// let valArr = [...map.values()]\r\n// let arr = [...map]\r\n// console.log(keyArr)\r\n// console.log(valArr)\r\n// console.log(arr)\r\n//\r\n// // 二维数组转一维数组\r\n// let res = []\r\n// arr.forEach(item => {\r\n//   res = [...res, ...item]\r\n// })\r\n// console.log(res)\r\n//\r\n// // 遍历1\r\n// map.forEach((value, key) => {\r\n//   console.log(`${key} -- ${value}`)\r\n// })\r\n// // 遍历2\r\n// for (let [key, value] of map) {\r\n//   console.log(`${key} -- ${value}`)\r\n// }\r\n//\r\n// // map 可以用任何类型的值作为键，json对象的键只能是字符串\r\n// let obj = {}\r\n// let func = function () {}\r\n// map.set(obj, '对象')\r\n// map.set(func, '函数')\r\n// console.log(map.get(obj))\r\n// console.log(map.get(func))\n\n\n// WEBPACK FOOTER //\n// ./src/es6/app.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/a.css\n// module id = 4\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/less/a.less\n// module id = 5\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sass/a.scss\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}